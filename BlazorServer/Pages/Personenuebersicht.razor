@page "/personenuebersicht"

@using DataLibrary
@using Microsoft.AspNetCore.WebUtilities
@using BlazorServer.Models
@using Microsoft.Extensions.Configuration
@inject IConfiguration _config
@inject NavigationManager UriHelper
@inject IDataAccess _data


<h3>Personenübersicht</h3>


@if (impfen == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <style>
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }
    </style>
    <br />
    <br />

    <table>
        <tr>
            <th>Personen ID</th>
            <th>Name</th>
            <th>Geburtsdatum</th>
            <th>Sozialversicherungsnummer</th>
            <th>Terminbuchung</th>
        </tr>
        @foreach (var i in impfen)
        {
            <tr>
                <td>
                    @i.per_Id
                </td>
                <td>
                    @i.Name
                </td>
                <td>
                    @i.per_GebDat.ToString("dd.MM.yyyy")
                </td>
                <td>
                    @i.per_svnr
                </td>
                <td>

                    <a class="btn btn-dark" href="@("/terminbuchung?PersonenID=" + i.per_Id.ToString())">Zum Impftermin</a>

                </td>
            </tr>
        }
    </table>

}

@code {

    List<ImpfModel> impfen;

    private string Vorname;
    private string Nachname;
    private DateTime Geburtsdatum;
    private string Sozialversicherungsnummer;

    private string queryID;



    //private async Task InsertData(string Vorname, string Nachname, DateTime Geburtsdatum, string Sozialversicherungsnummer)
    //{
    //    string sql = "insert into person (per_Vname, per_Nname, per_GebDat, per_svnr) values (@per_Vname, @per_Nname, @per_GebDat, @per_svnr);";

    //    await _data.SaveData(sql, new { per_Vname = Vorname, per_Nname = Nachname, per_GebDat = Geburtsdatum, per_svnr = Sozialversicherungsnummer }, _config.GetConnectionString("default"));
    //    await LoadAllData();
    //}



    private async Task LoadAllData()
    {
        string sql = "select per_Id, concat_ws(' ', per_Vname, per_Nname) as Name, per_GebDat, per_svnr from person";

        impfen = await _data.LoadData<ImpfModel, dynamic>(sql, new { }, _config.GetConnectionString("default"));
    }


    protected override async Task OnInitializedAsync()
    {
        var uri = UriHelper.ToAbsoluteUri(UriHelper.Uri);

        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("PersonenID", out var param))
        {
            queryID = param.First();
        }

        await LoadAllData();

        //Updatemovie = movie;
    }
}
